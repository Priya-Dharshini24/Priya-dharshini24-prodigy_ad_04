class TicTacToe:
    def __init__(self):
        self.board = [[' ' for _ in range(3)] for _ in range(3)]
        self.current_player = 'X'

    def print_board(self):
        for row in self.board:
            print('|'.join(row))
            print('-' * 5)

    def check_winner(self):
        # Check rows
        for row in self.board:
            if row.count(row[0]) == 3 and row[0] != ' ':
                return True

        # Check columns
        for col in range(3):
            if self.board[0][col] == self.board[1][col] == self.board[2][col] != ' ':
                return True

        # Check diagonals
        if self.board[0][0] == self.board[1][1] == self.board[2][2] != ' ':
            return True
        if self.board[0][2] == self.board[1][1] == self.board[2][0] != ' ':
            return True

        return False

    def is_board_full(self):
        for row in self.board:
            if ' ' in row:
                return False
        return True

    def switch_player(self):
        self.current_player = 'O' if self.current_player == 'X' else 'X'

    def play(self):
        while True:
            self.print_board()
            print(f"Player {self.current_player}'s turn")
            row = int(input("Enter row (0, 1, or 2): "))
            col = int(input("Enter column (0, 1, or 2): "))

            if 0 <= row <= 2 and 0 <= col <= 2 and self.board[row][col] == ' ':
                self.board[row][col] = self.current_player

                if self.check_winner():
                    self.print_board()
                    print(f"Player {self.current_player} wins!")
                    break
                elif self.is_board_full():
                    self.print_board()
                    print("It's a tie!")
                    break
                else:
                    self.switch_player()
            else:
                print("Invalid move. Try again.")

def main():
    game = TicTacToe()
    game.play()

if __name__ == "__main__":
    main()
```

